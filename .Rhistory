mapshot(
neighborhood_theft_map,
file = "../../../data/mapshot/neighborhood_theft_map.png"
)
# 2022 map
# mapview(shape_goodnow) +
#   mapview(goodnow_rd_22)
goodnow_map <-
mapview(shape_goodnow) +
mapview(goodnow_rd)
mapshot(
goodnow_map,
file = "../../../data/mapshot/goodnow_map.png"
)
knitr::include_graphics("../../../data/mapshot/goodnow_map.png")
goodnow_map <-
mapview(shape_goodnow) +
mapview(goodnow_rd)
mapshot(
goodnow_map,
file = "../../../data/mapshot/goodnow_map.png"
)
knitr::include_graphics("../../../data/mapshot/goodnow_map.png")
# 2022 thefts list
hamilton_ave_22 <- auto_theft_2022_corrected %>%
filter(location == "4800 hamilton ave")
hamilton_ave_22 %>%
arrange(crime_date_time) %>%
kbl() %>%
kable_minimal()
# 2023 thefts list
hamilton_ave <- auto_theft_2023_corrected %>%
filter(location == "4800 hamilton ave")
hamilton_ave %>%
arrange(crime_date_time) %>%
kbl() %>%
kable_minimal()
shape_hamilton <- simple_blocks %>%
# filter(!is.na(geometry)) %>%
filter(location == "4800 hamilton ave") %>%
group_by(location) %>%
summarise(geometry = st_union(geometry)) %>%
mutate(area = st_area(geometry),
sqrt = sqrt(area) /2)
# transform and reproject census stuff
hamilton_tract <-
st_transform(balt_city_med_income, st_crs(shape_hamilton))
# see which tract each block falls in (they're all gonna be the same tract )
hamilton_tract <-
st_intersection(hamilton_tract, shape_hamilton)
hamilton_demos <-
st_join(hamilton_tract, demographic_data) %>%
distinct(NAME, .keep_all = TRUE)
# 2023 thefts
hamilton_map <-
mapview(shape_hamilton) +
mapview(hamilton_ave)
mapshot(
hamilton_map,
file = "../../../data/mapshot/hamilton_map.png"
)
knitr::include_graphics("../../../data/mapshot/hamilton_map.png")
# 2022 thefts
# mapview(shape_hamilton) +
#   mapview(hamilton_ave_22)
# 2022 thefts list
hamilton_ave_22 <- auto_theft_2022_corrected %>%
filter(location == "4800 hamilton ave")
hamilton_ave_22 %>%
arrange(crime_date_time) %>%
kbl() %>%
kable_minimal()
# 2023 thefts list
hamilton_ave <- auto_theft_2023_corrected %>%
filter(location == "4800 hamilton ave")
hamilton_ave %>%
arrange(crime_date_time) %>%
kbl() %>%
kable_minimal()
shape_hamilton <- simple_blocks %>%
# filter(!is.na(geometry)) %>%
filter(location == "4800 hamilton ave") %>%
group_by(location) %>%
summarise(geometry = st_union(geometry)) %>%
mutate(area = st_area(geometry),
sqrt = sqrt(area) /2)
# transform and reproject census stuff
hamilton_tract <-
st_transform(balt_city_med_income, st_crs(shape_hamilton))
# see which tract each block falls in (they're all gonna be the same tract )
hamilton_tract <-
st_intersection(hamilton_tract, shape_hamilton)
hamilton_demos <-
st_join(hamilton_tract, demographic_data) %>%
distinct(NAME, .keep_all = TRUE)
# 2023 thefts
hamilton_map <-
mapview(shape_hamilton) +
mapview(hamilton_ave)
mapshot(
hamilton_map,
file = "../../../data/mapshot/hamilton_map.png"
)
knitr::include_graphics("../../../data/mapshot/hamilton_map.png")
# 2022 thefts
# mapview(shape_hamilton) +
#   mapview(hamilton_ave_22)
# 2022 thefts list
hamilton_ave_22 <- auto_theft_2022_corrected %>%
filter(location == "4800 hamilton ave")
hamilton_ave_22 %>%
arrange(crime_date_time) %>%
kbl() %>%
kable_minimal()
# 2023 thefts list
hamilton_ave <- auto_theft_2023_corrected %>%
filter(location == "4800 hamilton ave")
hamilton_ave %>%
arrange(crime_date_time) %>%
kbl() %>%
kable_minimal()
shape_hamilton <- simple_blocks %>%
# filter(!is.na(geometry)) %>%
filter(location == "4800 hamilton ave") %>%
group_by(location) %>%
summarise(geometry = st_union(geometry)) %>%
mutate(area = st_area(geometry),
sqrt = sqrt(area) /2)
# transform and reproject census stuff
hamilton_tract <-
st_transform(balt_city_med_income, st_crs(shape_hamilton))
# see which tract each block falls in (they're all gonna be the same tract )
hamilton_tract <-
st_intersection(hamilton_tract, shape_hamilton)
hamilton_demos <-
st_join(hamilton_tract, demographic_data) %>%
distinct(NAME, .keep_all = TRUE)
# 2023 thefts
hamilton_map <-
mapview(shape_hamilton) +
mapview(hamilton_ave)
mapshot(
hamilton_map,
file = "../../../data/mapshot/hamilton_map.png"
)
knitr::include_graphics("../../../data/mapshot/hamilton_map.png")
# 2022 thefts
# mapview(shape_hamilton) +
#   mapview(hamilton_ave_22)
yoy_change_blocks
yoy_change_blocks <-
auto_theft_since_2022 %>%
filter(!is.na(location)) %>%
filter(neighborhood == "frankford") %>%
group_by(location,
crime_date = case_when(crime_date_time >= "2022-01-01" & crime_date_time <= "2022-09-22" ~ "2022",
crime_date_time >= "2023-01-01" ~ "2023",
TRUE ~ "no year"
)) %>% count() %>%
pivot_wider(names_from = "crime_date", values_from = "n") %>%
ungroup() %>%
group_by(location) %>%
summarise("2022_through_9_22" = sum(`2022`, na.rm = T),
"2023" = sum(`2023`, na.rm = T),
difference_raw = `2023` - `2022_through_9_22`,
difference_pct = ((`2023` - `2022_through_9_22`) / `2022_through_9_22`) * 100
) %>%
arrange(desc(`2023`)) %>%
head(25)
yoy_change_blocks
yoy_change_blocks %>%
select(location, `2022_through_9_22`, `2023`) %>%
kbl() %>%
kbl_minimal()
yoy_change_blocks %>%
select(location, `2022_through_9_22`, `2023`) %>%
kbl() %>%
kable_minimal()
yoy_change_blocks %>%
select(location, `2022_through_9_22`, `2023`, -geometry) %>%
kbl() %>%
kable_minimal()
yoy_change_blocks %>%
as.data.frame() %>%
select(location, `2022_through_9_22`, `2023`) %>%
kbl() %>%
kable_minimal()
# 2023 thefts list
amberwood_rd <- auto_theft_2023_corrected %>%
filter(location == "6000 amberwood road") %>%
select(cc_number, date, time, time_range, premise_type, gender, age, race)
amberwood_rd %>%
arrange(crime_date_time) %>%
kbl() %>%
kable_minimal()
amberwood_rd %>%
arrange(date) %>%
kbl() %>%
kable_minimal()
# 2023 thefts list
amberwood_rd <- auto_theft_2023_corrected %>%
filter(location == "6000 amberwood road") %>%
as.data.frame() %>%
select(cc_number, date, time, time_range, premise_type, gender, age, race)
amberwood_rd %>%
arrange(date) %>%
kbl() %>%
kable_minimal()
# 2023 thefts
goodnow_rd <- auto_theft_2023_corrected %>%
filter(location == "5000 goodnow road" | location == "4900 goodnow road" | location == "5100 goodnow road") %>%
as.data.frame() %>%
select(cc_number, date, time, time_range, premise_type, gender, age, race)
goodnow_rd %>%
arrange(crime_date_time) %>%
kbl() %>%
kable_minimal()
goodnow_rd %>%
arrange(date) %>%
kbl() %>%
kable_minimal()
hamilton_ave %>%
arrange(date) %>%
kbl() %>%
kable_minimal()
# 2023 thefts list
hamilton_ave <- auto_theft_2023_corrected %>%
filter(location == "4800 hamilton ave") %>%
as.data.frame() %>%
select(cc_number, date, time, time_range, premise_type, gender, age, race)
hamilton_ave %>%
arrange(date) %>%
kbl() %>%
kable_minimal()
# 2023 thefts list
amberwood_rd <- auto_theft_2023_corrected %>%
filter(location == "6000 amberwood road") %>%
as.data.frame() %>%
select(cc_number, date, time, time_range, premise_type, gender, age, race)
amberwood_rd %>%
arrange(date) %>%
kbl() %>%
kable_minimal()
yoy_change_blocks <-
auto_theft_since_2022 %>%
filter(!is.na(location)) %>%
filter(neighborhood == "frankford") %>%
group_by(location,
crime_date = case_when(crime_date_time >= "2022-01-01" & crime_date_time <= "2022-09-22" ~ "2022",
crime_date_time >= "2023-01-01" ~ "2023",
TRUE ~ "no year"
)) %>% count() %>%
pivot_wider(names_from = "crime_date", values_from = "n") %>%
ungroup() %>%
group_by(location) %>%
summarise("2022_through_9_22" = sum(`2022`, na.rm = T),
"2023" = sum(`2023`, na.rm = T),
difference_raw = `2023` - `2022_through_9_22`,
difference_pct = ((`2023` - `2022_through_9_22`) / `2022_through_9_22`) * 100
) %>%
arrange(desc(`2023`)) %>%
head(25)
yoy_change_blocks %>%
as.data.frame() %>%
select(location, `2022_through_9_22`, `2023`) %>%
kbl() %>%
kable_minimal()
# 2022 thefts
goodnow_rd_22 <- auto_theft_2022_corrected %>%
filter(location == "5000 goodnow road" | location == "4900 goodnow road" | location == "5100 goodnow road")
# 2023 thefts
goodnow_rd <- auto_theft_2023_corrected %>%
filter(location == "5000 goodnow road" | location == "4900 goodnow road" | location == "5100 goodnow road") %>%
as.data.frame() %>%
select(cc_number, date, time, time_range, premise_type, gender, age, race)
goodnow_rd %>%
arrange(date) %>%
kbl() %>%
kable_minimal()
shape_goodnow <- simple_blocks %>%
# filter(!is.na(geometry)) %>%
filter(location == "5000 goodnow road" | location == "4900 goodnow road" | location == "5100 goodnow road") %>%
group_by(location) %>%
summarise(geometry = st_union(geometry)) %>%
mutate(area = st_area(geometry),
sqrt = sqrt(area) /2)
# transform and reproject census stuff
goodnow_tract <-
st_transform(balt_city_med_income, st_crs(shape_goodnow))
library(tidyverse)
library(tidycensus)
library(lubridate)
library(tigris)
library(janitor)
library(kableExtra)
library(sf)
library(mapview)
library(knitr)
library(scales)
library(tigris)
library(tidygeocoder)
library(htmlwidgets)
library(kableExtra)
knit_with_parameters("~/Documents/baltimoreBanner/Projects/2023/carThefts2023/code/analysis/r/day_1_theft_epicenter.Rmd")
unlink("code/analysis/r/day_1_theft_epicenter_cache", recursive = TRUE)
# loading packages
library(tidyverse)
library(tidycensus)
library(lubridate)
library(tigris)
library(janitor)
library(kableExtra)
library(sf)
library(mapview)
library(knitr)
library(scales)
library(tigris)
library(tidygeocoder)
library(htmlwidgets)
library(kableExtra)
# all neighborhoods
yoy_change_neighb %>%
as.data.frame() %>%
select(-geometry) %>%
# arrange(desc(difference_raw)) %>%
# arrange(desc(`2022_through_9_22`)) %>%
head(25) %>%
kbl() %>%
kable_classic()
goodnow_rd %>%
arrange(date) %>%
kbl() %>%
kable_classic()
library(kableExtra)
sessionInfo()
# loading packages
library(tidyverse)
library(tidycensus)
library(lubridate)
library(janitor)
library(sf)
library(mapview)
library(kableExtra)
# Turn off scientific notation
options(scipen=999)
# Most recent part 1 crimes data
victims <- read_csv("data/victims.csv")
# Baltimore neighborhoods shapefile
neighbs <- st_read("data/neighborhoods/Neighborhoods.shp")
# Car thefts (2023)
auto_theft_2023 <-
victims %>%
filter(str_detect(str_to_upper(description), "AUTO THEFT")) %>%
filter(crime_date_time >= "2023-01-01")
# Car thefts (2021 - 2023)
auto_theft_yoy <-
victims %>%
filter(str_detect(str_to_upper(description), "AUTO THEFT")) %>%
filter(crime_date_time >= "2021-01-01") %>%
filter(!is.na(x) | !is.na(y))
### Section 1: Examining car thefts by neighborhood
# turn p1 crime data into a simple features object
auto_theft_2023_sf <-
auto_theft_2023 %>%
filter(!is.na(x) | !is.na(y)) %>%
st_as_sf(coords = c("x", "y"),
crs = 4326) %>%
mutate(location =
case_when(str_detect(location, " rd$") ~ str_replace(location, " rd$", " road"),
str_detect(location, " avenue$") ~ str_replace(location, " avenue$", " ave"),
str_detect(location, " street$") ~ str_replace(location, " street$", " st"),
str_detect(location, " cir$") ~ str_replace(location, " cir$", " circle"),
str_detect(location, " cir n$") ~ str_replace(location, " cir n$", " circle n"),
str_detect(location, " cir s$") ~ str_replace(location, " cir s$", " circle s"),
TRUE ~ location))
auto_theft_since_2021_sf <-
st_as_sf(auto_theft_yoy,
coords = c("x", "y"),
crs = 4326) %>%
mutate(location =
case_when(str_detect(location, " rd$") ~ str_replace(location, " rd$", " road"),
str_detect(location, " avenue$") ~ str_replace(location, " avenue$", " ave"),
str_detect(location, " street$") ~ str_replace(location, " street$", " st"),
str_detect(location, " cir$") ~ str_replace(location, " cir$", " circle"),
str_detect(location, " cir n$") ~ str_replace(location, " cir n$", " circle n"),
str_detect(location, " cir s$") ~ str_replace(location, " cir s$", " circle s"),
TRUE ~ location))
# intersect crime data and neighborhood data
crime_by_neighb_geo <- st_transform(auto_theft_2023_sf, st_crs(neighbs))
crime_by_neighb_geo_since_2021 <- st_transform(auto_theft_since_2021_sf, st_crs(neighbs))
# Perform a spatial join to find which points in fall within which neighborhood boundaries
thefts_in_neighbs <- st_join(crime_by_neighb_geo, neighbs)
thefts_in_neighbs_since_2021 <- st_join(crime_by_neighb_geo_since_2021, neighbs)
# YOY change by neighborhood
yoy_change_neighb <-
thefts_in_neighbs_since_2021 %>%
# filter out neighborhood mismatches where geolocation neighborhood doesn't match listed neighborhood
filter(str_to_upper(name) == str_to_upper(neighborhood)) %>%
group_by(name,
crime_date = case_when(crime_date_time >= "2021-01-01" & crime_date_time <= "2021-11-07" ~ "2021",
crime_date_time >= "2022-01-01" & crime_date_time <= "2022-11-07" ~ "2022",
crime_date_time >= "2023-01-01" ~ "2023",
TRUE ~ "no year"
)) %>% count() %>%
pivot_wider(names_from = "crime_date", values_from = "n") %>%
ungroup() %>%
group_by(name) %>%
summarise(x2021 = sum(`2021`, na.rm = T ),
x2022 = sum(`2022`, na.rm = T),
x2023 = sum(`2023`, na.rm = T),
difference_raw = x2023 - x2022) %>%
arrange(desc(x2023))
# loading packages
library(tidyverse)
library(tidycensus)
library(lubridate)
library(janitor)
library(sf)
library(mapview)
library(kableExtra)
# Turn off scientific notation
options(scipen=999)
# Most recent part 1 crimes data
victims <- read_csv("data/victims.csv")
# Baltimore neighborhoods shapefile
neighbs <- st_read("data/neighborhoods/Neighborhoods.shp")
# Car thefts (2023)
auto_theft_2023 <-
victims %>%
filter(str_detect(str_to_upper(description), "AUTO THEFT")) %>%
filter(crime_date_time >= "2023-01-01")
# Car thefts (2021 - 2023)
auto_theft_yoy <-
victims %>%
filter(str_detect(str_to_upper(description), "AUTO THEFT")) %>%
filter(crime_date_time >= "2021-01-01") %>%
filter(!is.na(x) | !is.na(y))
### Section 1: Examining car thefts by neighborhood
# turn p1 crime data into a simple features object
auto_theft_2023_sf <-
auto_theft_2023 %>%
filter(!is.na(x) | !is.na(y)) %>%
st_as_sf(coords = c("x", "y"),
crs = 4326) %>%
mutate(location =
case_when(str_detect(location, " rd$") ~ str_replace(location, " rd$", " road"),
str_detect(location, " avenue$") ~ str_replace(location, " avenue$", " ave"),
str_detect(location, " street$") ~ str_replace(location, " street$", " st"),
str_detect(location, " cir$") ~ str_replace(location, " cir$", " circle"),
str_detect(location, " cir n$") ~ str_replace(location, " cir n$", " circle n"),
str_detect(location, " cir s$") ~ str_replace(location, " cir s$", " circle s"),
TRUE ~ location))
auto_theft_since_2021_sf <-
st_as_sf(auto_theft_yoy,
coords = c("x", "y"),
crs = 4326) %>%
mutate(location =
case_when(str_detect(location, " rd$") ~ str_replace(location, " rd$", " road"),
str_detect(location, " avenue$") ~ str_replace(location, " avenue$", " ave"),
str_detect(location, " street$") ~ str_replace(location, " street$", " st"),
str_detect(location, " cir$") ~ str_replace(location, " cir$", " circle"),
str_detect(location, " cir n$") ~ str_replace(location, " cir n$", " circle n"),
str_detect(location, " cir s$") ~ str_replace(location, " cir s$", " circle s"),
TRUE ~ location))
# intersect crime data and neighborhood data
crime_by_neighb_geo <- st_transform(auto_theft_2023_sf, st_crs(neighbs))
crime_by_neighb_geo_since_2021 <- st_transform(auto_theft_since_2021_sf, st_crs(neighbs))
# Perform a spatial join to find which points in fall within which neighborhood boundaries
thefts_in_neighbs <- st_join(crime_by_neighb_geo, neighbs)
thefts_in_neighbs_since_2021 <- st_join(crime_by_neighb_geo_since_2021, neighbs)
# YOY change by neighborhood
yoy_change_neighb <-
thefts_in_neighbs_since_2021 %>%
# filter out neighborhood mismatches where geolocation neighborhood doesn't match listed neighborhood
filter(str_to_upper(name) == str_to_upper(neighborhood)) %>%
group_by(name,
crime_date = case_when(crime_date_time >= "2021-01-01" & crime_date_time <= "2021-11-07" ~ "2021",
crime_date_time >= "2022-01-01" & crime_date_time <= "2022-11-07" ~ "2022",
crime_date_time >= "2023-01-01" ~ "2023",
TRUE ~ "no year"
)) %>% count() %>%
pivot_wider(names_from = "crime_date", values_from = "n") %>%
ungroup() %>%
group_by(name) %>%
summarise(x2021 = sum(`2021`, na.rm = T ),
x2022 = sum(`2022`, na.rm = T),
x2023 = sum(`2023`, na.rm = T),
difference_raw = x2023 - x2022) %>%
arrange(desc(x2023))
### Section 2: Examining Car thefts by block
# block intersections (for all auto thefts since 2022)
intersections <-
read_csv("data/block_intersections.csv")
# check for block intersections on all auto thefts
auto_theft_since_2022_corrected <-
thefts_in_neighbs_since_2021 %>%
filter(crime_date_time >= "2022-01-01") %>%
filter(!is.na(geometry)) %>%
# filter(str_to_upper(name) == str_to_upper(neighborhood)) %>%
filter(!cc_number %in% mismatches$cc_number) %>%
left_join(intersections) %>%
filter(intersects == TRUE) %>%
distinct(cc_number, gender, age, .keep_all = TRUE)
# check for block intersections on all auto thefts
auto_theft_since_2022_corrected <-
thefts_in_neighbs_since_2021 %>%
filter(crime_date_time >= "2022-01-01") %>%
filter(!is.na(geometry)) %>%
filter(str_to_upper(name) == str_to_upper(neighborhood)) %>%
left_join(intersections) %>%
filter(intersects == TRUE) %>%
distinct(cc_number, gender, age, .keep_all = TRUE)
